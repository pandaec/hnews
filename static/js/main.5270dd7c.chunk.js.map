{"version":3,"sources":["../../hackernews/src/components/PostListItem.js","../../hackernews/src/components/Paging.js","../../hackernews/src/components/Home.js","../../hackernews/src/components/Comment.js","../../hackernews/src/components/Post.js","../../hackernews/src/App.js","../../hackernews/src/serviceWorker.js","../../hackernews/src/index.js"],"names":["PostListItem","props","react_default","a","createElement","className","rank","href","data","url","target","rel","title","domain","user","points","react_router_dom","to","concat","id","comments_count","time_ago","Paging","onClick","prevPage","bind","this","page","nextPage","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","document","params","URLSearchParams","location","search","get","parseInt","state","posts","Math","max","fetchNewPage","_this2","map","o","i","components_PostListItem","key","history","components_Paging","newProps","setState","push","_this3","axios","then","res","status","console","log","error","catch","err","React","Component","Comment","_ref","level","dangerouslySetInnerHTML","__html","content","comments","Post","match","objectSpread","isPostTitle","components_Comment","App","basename","react_router","path","exact","component","Boolean","window","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kSA8BeA,MA3Bf,SAAsBC,GAClB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaJ,EAAMK,MACnCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGG,KAAMN,EAAMO,KAAKC,IAAKC,OAAO,SAASC,IAAI,uBAAsBT,EAAAC,EAAAC,cAAA,UAAKH,EAAMO,KAAKI,QACnFV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeJ,EAAMO,KAAKK,QAC1CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAmBJ,EAAMO,KAAKM,MACjDZ,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAwBJ,EAAMO,KAAKO,QACtDb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWjB,EAAMO,KAAKW,KAC1BjB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAsBJ,EAAMO,KAAKY,iBAExDlB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA6BJ,EAAMO,KAAKa,cCJhEC,MAVf,SAAgBrB,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBkB,QAAStB,EAAMuB,SAASC,KAAKC,QAC/DxB,EAAAC,EAAAC,cAAA,qBAAaH,EAAM0B,KAAnB,KACAzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBkB,QAAStB,EAAM2B,SAASH,KAAKC,UCFvDG,cACjB,SAAAA,EAAY5B,GAAO,IAAA6B,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAG,GACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAT,KAAMzB,IAENmC,SAASxB,MAAQ,QAEjB,IAAIyB,EAAS,IAAIC,gBAAgBrC,EAAMsC,SAASC,QAC5Cb,EAA2B,OAApBU,EAAOI,IAAI,KAAgBC,SAASL,EAAOI,IAAI,MAAQ,EANnD,OAOfX,EAAKa,MAAQ,CACTC,MAAO,GACPjB,KAAMkB,KAAKC,IAAInB,EAAM,IAEzBG,EAAKiB,eAXUjB,wEAcV,IAAAkB,EAAAtB,KACL,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACTqB,KAAKiB,MAAMC,MAAMK,IAAI,SAACC,EAAGC,GAAJ,OAAUjD,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACgD,EAAD,CAAcC,IAAKH,EAAE/B,GAAIb,KAAM,IAAI0C,EAAKL,MAAMhB,KAAK,GAAKwB,EAAG3C,KAAM0C,EAAGI,QAASN,EAAK/C,MAAMqD,cAGhIpD,EAAAC,EAAAC,cAACmD,EAAD,CAAQ5B,KAAMD,KAAKiB,MAAMhB,KAAMC,SAAUF,KAAKE,SAASH,KAAKC,MAAOF,SAAUE,KAAKF,SAASC,KAAKC,2DAMlF8B,GACtB,IAAInB,EAAS,IAAIC,gBAAgBkB,EAASjB,SAASC,QAC/Cb,EAA2B,OAApBU,EAAOI,IAAI,KAAgBC,SAASL,EAAOI,IAAI,MAAQ,EAClEf,KAAK+B,SAAS,CACVb,MAAO,GACPjB,KAAMkB,KAAKC,IAAInB,EAAM,IACtBD,KAAKqB,iDAIRrB,KAAKzB,MAAMqD,QAAQI,KAAnB,OAAAxC,OAA+BQ,KAAKiB,MAAMhB,KAAO,uCAIjDD,KAAKzB,MAAMqD,QAAQI,KAAnB,OAAAxC,OAA+B2B,KAAKC,IAAIpB,KAAKiB,MAAMhB,KAAO,EAAG,4CAGlD,IAAAgC,EAAAjC,KACXkC,IAAMnB,IAAI,wCAAyC,CAC/CJ,OAAQ,CACJV,KAAMD,KAAKiB,MAAMhB,QAGpBkC,KAAK,SAAAC,GACiB,MAAfA,EAAIC,QAKRC,QAAQC,IAAIH,EAAItD,MAChBmD,EAAKF,SAAS,CACVb,MAAOkB,EAAItD,QANXwD,QAAQE,MAAMJ,KASrBK,MAAM,SAAAC,GACHJ,QAAQE,MAAME,YA/DIC,IAAMC,mBCczBC,MAhBf,SAASA,EAATC,GAAwB,IAANhE,EAAMgE,EAANhE,KACd,OAEIN,EAAAC,EAAAC,cAAA,OAAKC,UAAwB,IAAbG,EAAKiE,MAAY,cAAgB,WAC7CvE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAqBG,EAAKiE,MAAQ,EAAI,aAAejE,EAAKiE,MAAM,GAAK,EAAI,GAAK,KAC1FvE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAkBG,EAAKM,MAD9C,MAC8DN,EAAKa,UAEnEnB,EAAAC,EAAAC,cAAA,QAAMsE,wBAAyB,CAAEC,OAAQnE,EAAKoE,YAEjDpE,EAAKqE,SAAS5B,IAAI,SAACC,EAAGC,GAAJ,OAAQjD,EAAAC,EAAAC,cAACmE,EAAD,CAASlB,IAAKH,EAAE/B,GAAIX,KAAM0C,QCP5C4B,cACjB,SAAAA,EAAY7E,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAoD,GACfhD,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAAT,KAAMzB,IACN+D,QAAQC,IAAIhE,GACZ6B,EAAKa,MAAQ,CACTkC,SAAU,IAEdjB,IAAMnB,IAAN,yCAAAvB,OAAmDY,EAAK7B,MAAM8E,MAAM1C,OAAOlB,KACtE0C,KAAK,SAAAC,GACiB,MAAfA,EAAIC,QAKRC,QAAQC,IAAIH,EAAItD,MAChBsB,EAAK2B,SAASK,EAAItD,MAClB4B,SAASxB,MAAQkB,EAAKa,MAAM/B,OANxBoD,QAAQE,MAAMJ,KAQrBK,MAAM,SAAAC,GACHJ,QAAQE,MAAME,KAlBPtC,wEAuBf,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgD,EAAD,CAAc5C,KAAIuB,OAAAiD,EAAA,EAAAjD,CAAA,GAAOL,KAAKiB,MAAZ,CAAmBsC,aAAa,IAAQ3E,KAAM,MAC/DoB,KAAKiB,MAAMkC,SAAS5B,IAAI,SAACC,EAAGC,GAAJ,OAAUjD,EAAAC,EAAAC,cAAC8E,EAAD,CAAS7B,IAAKH,EAAE/B,GAAIX,KAAM0C,cA3B3CmB,IAAMC,iBCqBzBa,MApBf,WACE,OACEjF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQoE,SAAS,UACflF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,KAAT,aAMRf,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3D,IACjC3B,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,KAAK,YAAYE,UAAWV,MCTrBW,QACW,cAA7BC,OAAOnD,SAASoD,UAEe,UAA7BD,OAAOnD,SAASoD,UAEhBD,OAAOnD,SAASoD,SAASZ,MACvB,2DCZNa,IAASC,OAAO3F,EAAAC,EAAAC,cAAC0F,EAAD,MAAS1D,SAAS2D,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,KAAK,SAAAsC,GACjCA,EAAaC","file":"static/js/main.5270dd7c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction PostListItem(props) {\r\n    return (\r\n        <div className=\"post-item\">\r\n            <span className=\"post-rank\">{props.rank}</span>\r\n            <div className=\"post-content\">\r\n                <a href={props.data.url} target=\"_blank\" rel=\"noopener noreferrer\"><h3>{props.data.title}</h3></a>\r\n                <span className=\"post-domain\">{props.data.domain}</span>\r\n                <div className=\"post-info\">\r\n                    <span><i className=\"fa fa-user\" ></i>{props.data.user}</span>\r\n                    <span><i className=\"fa fa-chevron-up\"></i>{props.data.points}</span>\r\n                    <Link to={`/post/${props.data.id}`}>\r\n                        <span><i className=\"fa fa-comments\"></i>{props.data.comments_count}</span>\r\n                    </Link>\r\n                    <span><i className=\"fa fa-hourglass-start\"></i>{props.data.time_ago}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* {!props.data.isPostTitle ?\r\n                <Link to={`/post/${props.data.id}`}>\r\n                    <span className=\"post-comment\"><i className=\"fa fa-comments\"></i></span>\r\n                </Link>  : ''\r\n            } */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostListItem;","import React from 'react';\r\n\r\nfunction Paging(props) {\r\n    return (\r\n        <div className=\"paging\">\r\n            <i className=\"fa fa-chevron-left\" onClick={props.prevPage.bind(this)}></i>\r\n            <span> PAGE {props.page} </span>\r\n            <i className=\"fa fa-chevron-right\" onClick={props.nextPage.bind(this)}></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paging;","import React from 'react';\r\nimport axios from 'axios';\r\nimport PostListItem from './PostListItem'\r\nimport Paging from './Paging';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        document.title = 'HNews';\r\n\r\n        let params = new URLSearchParams(props.location.search);\r\n        let page = params.get('p') !== null ? parseInt(params.get('p')) : 1;\r\n        this.state = {\r\n            posts: [],\r\n            page: Math.max(page, 1),\r\n        };\r\n        this.fetchNewPage();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <ul className=\"news-list\">\r\n                    {this.state.posts.map((o, i) => <li><PostListItem key={o.id} rank={30*(this.state.page-1) + i} data={o} history={this.props.history}></PostListItem></li>)}\r\n                </ul>\r\n\r\n                <Paging page={this.state.page} nextPage={this.nextPage.bind(this)} prevPage={this.prevPage.bind(this)}></Paging>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // called when url params is updated\r\n    componentWillReceiveProps(newProps) {\r\n        let params = new URLSearchParams(newProps.location.search);\r\n        let page = params.get('p') !== null ? parseInt(params.get('p')) : 1;\r\n        this.setState({\r\n            posts: [],\r\n            page: Math.max(page, 1),\r\n        }, this.fetchNewPage);\r\n    }\r\n\r\n    nextPage() {\r\n        this.props.history.push(`/?p=${this.state.page + 1}`);\r\n    }\r\n\r\n    prevPage() {\r\n        this.props.history.push(`/?p=${Math.max(this.state.page - 1, 1)}`);\r\n    }\r\n\r\n    fetchNewPage() {\r\n        axios.get('https://node-hnapi.herokuapp.com/news', {\r\n            params: {\r\n                page: this.state.page,\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    console.error(res);\r\n                    return;\r\n                }\r\n\r\n                console.log(res.data);\r\n                this.setState({\r\n                    posts: res.data,\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nfunction Comment({data}){\r\n    return (\r\n\r\n        <div className={data.level===0 ? 'top-comment' : 'comment'  }>\r\n            <div className={\"comment-content\" + (data.level > 0 ? ' ribbon-' + ((data.level-1) % 8 + 1) : '')}>\r\n                <p>\r\n                    <span><i className=\"fa fa-user\"></i>{data.user}</span> - {data.time_ago}\r\n                </p>\r\n                <span dangerouslySetInnerHTML={{ __html: data.content }}></span>\r\n            </div>\r\n            {data.comments.map((o, i)=><Comment key={o.id} data={o} />)}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Comment;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Comment from './Comment';\r\nimport PostListItem from './PostListItem';\r\n\r\n\r\nexport default class Post extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            comments: [],\r\n        }\r\n        axios.get(`https://node-hnapi.herokuapp.com/item/${this.props.match.params.id}`)\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    console.error(res);\r\n                    return;\r\n                }\r\n\r\n                console.log(res.data);\r\n                this.setState(res.data);\r\n                document.title = this.state.title;\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <PostListItem data={{ ...this.state, isPostTitle: true }} rank={'*'}></PostListItem>\r\n                {this.state.comments.map((o, i) => <Comment key={o.id} data={o}></Comment>)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Post from './components/Post';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <Router basename=\"/hnews\">\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to='/'>HNews</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/post/:id\" component={Post} />\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}